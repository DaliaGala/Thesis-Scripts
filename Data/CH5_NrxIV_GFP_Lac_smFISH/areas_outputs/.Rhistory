#         axis.title.y = element_text(size = 8),
#         axis.text.x = element_text(size = 8)) +
#   labs(x = NULL,
#        title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
#        y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
View(df_long_areas_calc_outlier)
df_long_areas_calc_outlier <- df_long_areas_calc %>%
filter(Filename != "20220812_nrxIV_lac_smFISH_L1_S2L_TIF")
ggplot(df_long_areas_calc_outlier, aes(x = Original_Column, y = Value)) +
geom_boxplot(width = 0.5, outlier.shape = NA) +  # Adding the boxplot; suppress outliers for clarity
geom_jitter(width = 0.1, alpha = 0.3, size = 4, color = "#C53270") +  # You can keep the jitter for individual observations
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 10),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8)) +
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc_outlier, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
View(merged_df)
# clean_molecules <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(Filename, "_stim_") ~ "Stimulated",
#     str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
#     str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
#   rename("no_mRNA_molecules" = "Common Coordinates")
# clean <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(name_of_csv, "_stim_") ~ "Stimulated",
#     str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
#     str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
clean_molecules <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_C1") ~ "NrxIV",
str_detect(Filename, "_C2") ~ "Axon_terminal")) %>%
rename("no_mRNA_molecules" = "Common Coordinates") %>%
mutate(Filename = gsub("_C1.tif", "", clean_molecules$Filename)) %>%
mutate(Filename = gsub("_C2.tif", "", clean_molecules$Filename))
df_wide_pivot <- clean_molecules %>%
pivot_wider(names_from = condition, values_from = no_mRNA_molecules)
df_wide_pivot$Filename <- sub("ROI_", "", df_wide_pivot$Filename)
merged_df <- full_join(result_df, df_wide_pivot, by = "Filename")
merged_df <- full_join(merged_df, areas_clean, by = c("Filename" = "Label"))
# Rename the column
colnames(merged_df)[colnames(merged_df) == "Number_of_rows"] <- "Whole_NMJ"
colnames(merged_df)[colnames(merged_df) == "NrxIV"] <- "BBB"
merged_df <- merged_df %>%
mutate(mols_per_neuron = Axon_terminal/Axon_terminal_area) %>%
mutate(mols_per_BBB = BBB/NrxIV_area)
df_long_areas_calc_area_longer <- merged_df %>%
gather(key = "Original_Column", value = "Value", Axon_terminal_area:NrxIV_area)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc_area_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
df_long_areas_calc_outlier <- df_long_areas_calc %>%
filter(Filename != "20220812_nrxIV_lac_smFISH_L1_S2L_TIF")
ggplot(df_long_areas_calc_outlier, aes(x = Original_Column, y = Value)) +
geom_boxplot(width = 0.5, outlier.shape = NA) +  # Adding the boxplot; suppress outliers for clarity
geom_jitter(width = 0.1, alpha = 0.3, size = 4, color = "#C53270") +  # You can keep the jitter for individual observations
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 10),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8)) +
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# clean_molecules <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(Filename, "_stim_") ~ "Stimulated",
#     str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
#     str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
#   rename("no_mRNA_molecules" = "Common Coordinates")
# clean <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(name_of_csv, "_stim_") ~ "Stimulated",
#     str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
#     str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
clean_molecules <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_C1") ~ "NrxIV",
str_detect(Filename, "_C2") ~ "Axon_terminal")) %>%
rename("no_mRNA_molecules" = "Common Coordinates") %>%
mutate(Filename = gsub("_C1.tif", "", clean_molecules$Filename)) %>%
mutate(Filename = gsub("_C2.tif", "", clean_molecules$Filename))
df_wide_pivot <- clean_molecules %>%
pivot_wider(names_from = condition, values_from = no_mRNA_molecules)
df_wide_pivot$Filename <- sub("ROI_", "", df_wide_pivot$Filename)
merged_df <- full_join(result_df, df_wide_pivot, by = "Filename")
merged_df <- full_join(merged_df, areas_clean, by = c("Filename" = "Label"))
# Rename the column
colnames(merged_df)[colnames(merged_df) == "Number_of_rows"] <- "Whole_NMJ"
colnames(merged_df)[colnames(merged_df) == "NrxIV"] <- "BBB"
merged_df <- merged_df %>%
mutate(mols_per_neuron = Axon_terminal/Axon_terminal_area) %>%
mutate(mols_per_BBB = BBB/NrxIV_area)
df_long_areas_calc_area_longer <- merged_df %>%
gather(key = "Original_Column", value = "Value", BBB:Axon_terminal)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc_area_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("mols_per_neuron", "mols_per_BBB")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc_area_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB", "Axon_terminal")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# clean_molecules <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(Filename, "_stim_") ~ "Stimulated",
#     str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
#     str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
#   rename("no_mRNA_molecules" = "Common Coordinates")
# clean <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(name_of_csv, "_stim_") ~ "Stimulated",
#     str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
#     str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
clean_molecules <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_C1") ~ "NrxIV",
str_detect(Filename, "_C2") ~ "Axon_terminal")) %>%
rename("no_mRNA_molecules" = "Common Coordinates") %>%
mutate(Filename = gsub("_C1.tif", "", clean_molecules$Filename)) %>%
mutate(Filename = gsub("_C2.tif", "", clean_molecules$Filename))
df_wide_pivot <- clean_molecules %>%
pivot_wider(names_from = condition, values_from = no_mRNA_molecules)
df_wide_pivot$Filename <- sub("ROI_", "", df_wide_pivot$Filename)
merged_df <- full_join(result_df, df_wide_pivot, by = "Filename")
merged_df <- full_join(merged_df, areas_clean, by = c("Filename" = "Label"))
# Rename the column
colnames(merged_df)[colnames(merged_df) == "Number_of_rows"] <- "Whole_NMJ"
colnames(merged_df)[colnames(merged_df) == "NrxIV"] <- "BBB"
merged_df <- merged_df %>%
mutate(mols_per_neuron = Axon_terminal/Axon_terminal_area) %>%
mutate(mols_per_BBB = BBB/NrxIV_area) %>%
mutate(BBB_to_axon_ratio_mols = BBB/Axon_terminal) %>%
mutate(BBB_to_axon_ratio_areas = NrxIV_area/Axon_terminal_area)
df_long_areas_calc_area_longer <- merged_df %>%
gather(key = "Original_Column", value = "Value", BBB_to_axon_ratio_mols:BBB_to_axon_ratio_areas)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_long_areas_calc_area_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB", "Axon_terminal")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# clean_molecules <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(Filename, "_stim_") ~ "Stimulated",
#     str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
#     str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
#   rename("no_mRNA_molecules" = "Common Coordinates")
# clean <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(name_of_csv, "_stim_") ~ "Stimulated",
#     str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
#     str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
clean_molecules <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_C1") ~ "NrxIV",
str_detect(Filename, "_C2") ~ "Axon_terminal")) %>%
rename("no_mRNA_molecules" = "Common Coordinates") %>%
mutate(Filename = gsub("_C1.tif", "", clean_molecules$Filename)) %>%
mutate(Filename = gsub("_C2.tif", "", clean_molecules$Filename))
df_wide_pivot <- clean_molecules %>%
pivot_wider(names_from = condition, values_from = no_mRNA_molecules)
df_wide_pivot$Filename <- sub("ROI_", "", df_wide_pivot$Filename)
merged_df <- full_join(result_df, df_wide_pivot, by = "Filename")
merged_df <- full_join(merged_df, areas_clean, by = c("Filename" = "Label"))
# Rename the column
colnames(merged_df)[colnames(merged_df) == "Number_of_rows"] <- "Whole_NMJ"
colnames(merged_df)[colnames(merged_df) == "NrxIV"] <- "BBB"
merged_df <- merged_df %>%
mutate(mols_per_neuron = Axon_terminal/Axon_terminal_area) %>%
mutate(mols_per_BBB = BBB/NrxIV_area) %>%
mutate(BBB_to_axon_ratio_mols = BBB/Axon_terminal) %>%
mutate(BBB_to_axon_ratio_areas = NrxIV_area/Axon_terminal_area)
df_longer <- merged_df %>%
gather(key = "Original_Column", value = "Value", BBB_to_axon_ratio_mols*100:BBB_to_axon_ratio_areas*100)
# clean_molecules <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(Filename, "_stim_") ~ "Stimulated",
#     str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
#     str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
#   rename("no_mRNA_molecules" = "Common Coordinates")
# clean <- dataframe %>%
#   mutate(condition = case_when(
#     str_detect(name_of_csv, "_stim_") ~ "Stimulated",
#     str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
#     str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
clean_molecules <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_C1") ~ "NrxIV",
str_detect(Filename, "_C2") ~ "Axon_terminal")) %>%
rename("no_mRNA_molecules" = "Common Coordinates") %>%
mutate(Filename = gsub("_C1.tif", "", clean_molecules$Filename)) %>%
mutate(Filename = gsub("_C2.tif", "", clean_molecules$Filename))
df_wide_pivot <- clean_molecules %>%
pivot_wider(names_from = condition, values_from = no_mRNA_molecules)
df_wide_pivot$Filename <- sub("ROI_", "", df_wide_pivot$Filename)
merged_df <- full_join(result_df, df_wide_pivot, by = "Filename")
merged_df <- full_join(merged_df, areas_clean, by = c("Filename" = "Label"))
# Rename the column
colnames(merged_df)[colnames(merged_df) == "Number_of_rows"] <- "Whole_NMJ"
colnames(merged_df)[colnames(merged_df) == "NrxIV"] <- "BBB"
merged_df <- merged_df %>%
mutate(mols_per_neuron = Axon_terminal/Axon_terminal_area) %>%
mutate(mols_per_BBB = BBB/NrxIV_area) %>%
mutate(BBB_to_axon_ratio_mols = (BBB/Axon_terminal)*100) %>%
mutate(BBB_to_axon_ratio_areas = (NrxIV_area/Axon_terminal_area)*100)
df_longer <- merged_df %>%
gather(key = "Original_Column", value = "Value", BBB_to_axon_ratio_mols:BBB_to_axon_ratio_areas)
View(df_longer)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB", "Axon_terminal")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac mRNA molecules in glial projections")))
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB", "Axon_terminal")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio (%)")
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio (%)")
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("BBB to motor neuron terminal area ratio", "BBB to motor neuron terminal Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio (%)")
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("Area ratio (NrxIV::GFP/HRP)", "Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio of measure in Blood-Brain Barrier to motor neuron terminal (%)")
# y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_RNAi_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("Area ratio (NrxIV::GFP/HRP)", "Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio of measure in Blood-Brain Barrier to motor neuron terminal (%)")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/NrxIV_GFP_Lac_MRNA_ratios.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("Area ratio (NrxIV::GFP/HRP)", "Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron termninal and Blood-Brain Barrier",
y = "Ratio of measure in Blood-Brain Barrier to motor neuron terminal (%)")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/NrxIV_GFP_Lac_MRNA_ratios.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("Area ratio (NrxIV::GFP/HRP)", "Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron terminal and Blood-Brain Barrier",
y = "Ratio of measure in Blood-Brain Barrier to motor neuron terminal (%)")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/NrxIV_GFP_Lac_MRNA_ratios.pdf",
width = 10 * 0.6, height = 10 * 0.38937,
device = cairo_pdf)
# result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
# clean_molecules$condition <- factor(clean_molecules$condition, levels = c("Control", "Lac RNAi"))
custom_labels <- c("Area ratio (NrxIV::GFP/HRP)", "Lac mRNA molecules ratio")
ggplot(df_longer, aes(x = Original_Column, y = Value)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("BBB_to_axon_ratio_areas", "BBB_to_axon_ratio_mols")), method = "t.test", label = "p.signif") +
theme_classic2() +
scale_x_discrete(labels = custom_labels)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac mRNA molecules in motor neuron terminal and Blood-Brain Barrier",
y = "Ratio of measure in Blood-Brain Barrier to motor neuron terminal (%)")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/NrxIV_GFP_Lac_MRNA_ratios.pdf",
width = 10 * 0.5, height = 10 * 0.38937,
device = cairo_pdf)
