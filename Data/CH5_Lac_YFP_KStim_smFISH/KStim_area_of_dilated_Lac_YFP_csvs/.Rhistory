group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- result_df %>%
wilcox_test(no_mRNA_molecules ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
result_df %>%
group_by(condition) %>%
shapiro_test(molecules_per_micron_sq) %>%
add_significance()
stats <- result_df %>%
wilcox_test(molecules_per_micron_sq ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
stats <- result_df %>%
t_test(molecules_per_micron_sq ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
stats <- result_df %>%
wilcox_test(molecules_per_micron_sq ~ condition) %>%
add_significance()
View(stats)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in the whole NMJ area",
y = "Number of Lac::YFP mRNA molecules")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "anova") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in glia ",
y = "Number of Lac::YFP mRNA molecules")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in glia ",
y = "Number of Lac::YFP mRNA molecules")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
View(result_df)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = no_mRNA_molecules)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in glia ",
y = "Number of Lac::YFP mRNA molecules")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = no_mRNA_molecules)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = "Number of Lac::YFP mRNA molecules")
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = "Number of Lac::YFP mRNA molecules")
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_whole_NMJ.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = "Number of Lac::YFP mRNA molecules")
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_NMJ_glia_only.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac::YFP mRNA molecules per (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_NMJ_glia_only.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_NMJ_glia_only.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
result_df$condition <- factor(result_df$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(result_df, aes(x = condition, y = molecules_per_micron_sq)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.6, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "t.test", label = "p.signif") +
theme_classic2() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP mRNA molecules in NMJ glial projections",
y = expression(paste("Number of Lac::YFP mRNA molecules per ",mu, m^2,sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_mRNA_NMJ_glia_only.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
library(tidyverse)
library(patchwork)
library(rstatix)
library(ggplot2)
library(ggbeeswarm)
library(ggpubr)
library(readr)
library(gridExtra)
library(dplyr)
library(stringr)
library(readr)
`%!in%` = Negate(`%in%`)
options(scipen = 999)
df_filtered <- read_csv("/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Reanalysis_with_triangle_to_compare_to_smFISH/All_data_old_new_stim_unstim_HRP.csv")
df_for_plotting <- df_filtered %>%
mutate(smFISH = case_when(
stimulated == "Unstimulated" ~ "No",
str_detect(Label, "250122") ~ "No",
TRUE ~ "Yes"
)) %>%
filter(smFISH == "No")
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Glial area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_glial_areas_no_smFISH.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
df_filtered <- read_csv("/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Reanalysis_with_triangle_to_compare_to_smFISH/All_data_old_new_stim_unstim_HRP.csv")
df_for_plotting <- df_filtered %>%
mutate(smFISH = case_when(
stimulated == "Unstimulated" ~ "Yes",
str_detect(Label, "250122") ~ "No",
TRUE ~ "Yes"
)) %>%
filter(smFISH == "Yes")
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Glial area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_glial_areas_no_smFISH.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_glial_areas_no_smFISH.pdf",
#        width = 10 * 0.3937, height = 10 * 0.38937,
#        device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 8),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 7),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 8),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.3937, height = 10 * 0.38937,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 8 ),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_smFISH.pdf",
width = 10 * 0.52, height = 10 * 0.52,
device = cairo_pdf)
df_filtered <- read_csv("/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Reanalysis_with_triangle_to_compare_to_smFISH/All_data_old_new_stim_unstim_HRP.csv")
df_for_plotting <- df_filtered %>%
mutate(smFISH = case_when(
stimulated == "Unstimulated" ~ "No",
str_detect(Label, "250122") ~ "No",
TRUE ~ "Yes"
)) %>%
filter(smFISH == "No")
df_for_plotting$stimulated <- factor(df_for_plotting$stimulated, levels = c("Unstimulated","Stimulated"))
ggplot(df_for_plotting, aes(x = stimulated, y = sum_Area_new)) +
geom_violin(color = 'NA', fill = "gray70", trim = FALSE, alpha = 0.30) +
geom_quasirandom(width = 0.2, size = 0.4) +
geom_pointrange(stat = "summary", colour = "#ff7251", size = 0.5) +
# theme_bw() +
# geom_jitter(width = 0.1, alpha = 0.3, size = 1) +
# stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
# stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ condition) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Axon projection area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Pre_post_stim_HRP_areas_no_smFISH.pdf",
width = 10 * 0.52, height = 10 * 0.52,
device = cairo_pdf)
