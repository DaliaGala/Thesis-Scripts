library(tidyverse)
library(patchwork)
library(rstatix)
library(ggplot2)
library(ggbeeswarm)
library(ggpubr)
library(readr)
`%!in%` = Negate(`%in%`)
file_list = list.files(path ="/Volumes/Dalia_Data/smFISH/KStim_CPTI_smFISH/KStim_csvs/", pattern = "*.csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
df <-read_csv(file_list, id = "name")%>%
mutate(name = str_remove_all(name, ".csv"))
getwd()
dataframe <- read_csv("final_results.csv")
View(dataframe)
View(dataframe)
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(name_of_csv, "_stim_") ~ "Stimulated",
str_detect(name_of_csv, "unstim_mock") ~ "Mock stimulated",
str_detect(name_of_csv, "unstim_open") ~ "Unstimulated"))
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated"))
View(clean)
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated"))
# Rename
clean <- clean %>% rename("Lac::YFP mRNA molecules" = "Common Coordinates")
View(clean)
clean %>%
group_by(condition) %>%
shapiro_test("Lac::YFP mRNA molecules") %>%
add_significance()
clean %>%
group_by(condition) %>%
shapiro_test(Lac::YFP mRNA molecules) %>%
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
dataframe <- read_csv("final_results.csv")
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated"))
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
View(clean)
clean %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- clean %>%
wilcox_test(no_mRNA_molecules ~ condition) %>%
add_significance()
View(stats)
stats <- clean %>%
t_test(no_mRNA_molecules ~ condition) %>%
add_significance()
View(stats)
ggplot(clean, aes(x=condition, y=no_mRNA_molecules)) +
geom_boxplot()+
geom_jitter(position=position_jitter(0.2)) +
stat_compare_means(comparisons = list(c("Stimulated", "Mock stimulated"), c("Stimulated", "Unstimulated"),
c("Unstimulated", "Mock stimulated")), method = "t.test", label =
'p.signif')
View(clean)
dataframe <- read_csv("final_results.csv")
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
mutate(segment = case_when(
str_detect(Filename, "_S2L") ~ "2",
str_detect(Filename, "_S2R") ~ "2",
str_detect(Filename, "_S3L") ~ "3",
str_detect(Filename, "_S3R") ~ "3",
str_detect(Filename, "_S4L") ~ "4",
str_detect(Filename, "_S4R") ~ "4",
str_detect(Filename, "_S5L") ~ "5",
str_detect(Filename, "_S5L") ~ "5",
))
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
View(clean)
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
mutate(segment = case_when(
str_detect(Filename, "_S2L") ~ "2",
str_detect(Filename, "_S2R") ~ "2",
str_detect(Filename, "_S3L") ~ "3",
str_detect(Filename, "_S3R") ~ "3",
str_detect(Filename, "_S4L") ~ "4",
str_detect(Filename, "_S4R") ~ "4",
str_detect(Filename, "_S5L") ~ "5",
str_detect(Filename, "_S5R") ~ "5",
))
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
View(clean)
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
mutate(segment = case_when(
str_detect(Filename, "_S2L") ~ "2",
str_detect(Filename, "_S2R") ~ "2",
str_detect(Filename, "_S3L") ~ "3",
str_detect(Filename, "_S3R") ~ "3",
str_detect(Filename, "_S4L") ~ "4",
str_detect(Filename, "_S4R") ~ "4",
str_detect(Filename, "_S5L") ~ "5",
str_detect(Filename, "_S5R") ~ "5",
))
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
filtered_df <- clean %>% filter(segment == 3 | segment ==2)
View(filtered_df)
filtered_df %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- filtered_df %>%
t_test(no_mRNA_molecules ~ condition) %>%
add_significance()
View(stats)
stats <- filtered_df %>%
wilcox_test(no_mRNA_molecules ~ condition) %>%
add_significance()
View(stats)
stats <- clean %>%
wilcox_test(number_of_rows ~ condition, p.adjust.method = "bonferroni")
stats <- filtered_df %>%
wilcox_test(no_mRNA_molecules ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
filtered_df <- clean %>% filter(segment == 3 | segment ==2 | segment == 4)
filtered_df %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- filtered_df %>%
wilcox_test(no_mRNA_molecules ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
filtered_df <- clean %>% filter(segment ==2)
filtered_df %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- filtered_df %>%
wilcox_test(no_mRNA_molecules ~ condition, p.adjust.method = "bonferroni") %>%
add_significance()
View(stats)
filtered_df <- clean %>% filter(segment == 2|segment == 3)
filtered_df %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
```{r}
filtered_df <- clean %>% filter(segment == 2|segment == 3)
```
clean <- dataframe %>%
mutate(condition = case_when(
str_detect(Filename, "_stim_") ~ "Stimulated",
str_detect(Filename, "unstim_mock") ~ "Mock stimulated",
str_detect(Filename, "unstim_open") ~ "Unstimulated")) %>%
mutate(segment = case_when(
str_detect(Filename, "_S2L") ~ "2",
str_detect(Filename, "_S2R") ~ "2",
str_detect(Filename, "_S3L") ~ "3",
str_detect(Filename, "_S3R") ~ "3",
str_detect(Filename, "_S4L") ~ "4",
str_detect(Filename, "_S4R") ~ "4",
str_detect(Filename, "_S5L") ~ "5",
str_detect(Filename, "_S5R") ~ "5",
))
# Rename
clean <- clean %>% rename("no_mRNA_molecules" = "Common Coordinates")
filtered_df <- clean %>% filter(segment == 2|segment == 3)
filtered_df %>%
group_by(condition) %>%
shapiro_test(no_mRNA_molecules) %>%
add_significance()
stats <- filtered_df %>%
wilcox_test(no_mRNA_molecules ~ condition, p.adjust.method = "fdr") %>%
add_significance()
View(stats)
ggplot(filtered_df, aes(x=condition, y=no_mRNA_molecules)) +
geom_boxplot()+
geom_jitter(position=position_jitter(0.2)) +
stat_compare_means(comparisons = list(c("Stimulated", "Mock stimulated"), c("Stimulated", "Unstimulated"),
c("Unstimulated", "Mock stimulated")), method = "t.test", label =
'p.signif')
library(tidyverse)
library(patchwork)
library(rstatix)
library(ggplot2)
library(ggbeeswarm)
library(ggpubr)
library(readr)
library(gridExtra)
library(dplyr)
library(stringr)
library(readr)
`%!in%` = Negate(`%in%`)
options(scipen = 999)
file_list = list.files(path ="/Volumes/Dalia_Data/smFISH/KStim_CPTI_smFISH/HRP_areas/CSVs/", pattern = "*.csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
df <-read_csv(file_list, id = "name")%>%
mutate(name = str_remove_all(name, ".csv"))
setwd("/Volumes/Dalia_Data/smFISH/KStim_CPTI_smFISH/HRP_areas/CSVs/")
file_list = list.files(path ="/Volumes/Dalia_Data/smFISH/KStim_CPTI_smFISH/HRP_areas/CSVs/", pattern = "*.csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
df <-read_csv(file_list, id = "name")%>%
mutate(name = str_remove_all(name, ".csv"))
View(df)
clean <- df %>%
group_by(name) %>%
summarise(sum_Area = sum(Area)) %>%
ungroup() %>%
mutate(condition = case_when(
str_detect(name, "_stim_") ~ "Stimulated",
str_detect(name, "unstim_mock") ~ "Mock stimulated",
str_detect(name, "unstim_open") ~ "Unstimulated")) %>%
filter(condition != "Mock stimulated") %>%
select(-sum_RawIntDen)
clean <- df %>%
group_by(name) %>%
summarise(sum_Area = sum(Area)) %>%
ungroup() %>%
mutate(condition = case_when(
str_detect(name, "_stim_") ~ "Stimulated",
str_detect(name, "unstim_mock") ~ "Mock stimulated",
str_detect(name, "unstim_open") ~ "Unstimulated")) %>%
filter(condition != "Mock stimulated")
# %>%
#   select(-sum_RawIntDen)
# %>%
# , sum_RawIntDen = sum(RawIntDen)
#   mutate(density = ((sum_RawIntDen-(mean_bg_density*sum_Area))/sum_Area))
# long_df <- clean %>%
#   gather(key = "measure", value = "value", sum_Area, density) %>%
#   mutate(measure = recode(measure,
#                           sum_Area = "Area (um^2)",
#                           density = "Lac::YFP signal density (A.U.)"))
# df_for_testing <- filter(clean, condition == "Unstimulated"|condition == "Stimulated")
#   mutate(density = ((sum_RawIntDen-(mean_bg_density*sum_Area))/sum_Area)) %>%
View(clean)
View(clean)
clean %>%
group_by(condition) %>%
shapiro_test(sum_Area) %>%
add_significance()
stats <- clean %>%
t_test(sum_Area ~ condition, ref.group = "Unstimulated") %>%
add_significance()
View(stats)
View(clean)
View(clean)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 2) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
facet_wrap(~ measure, scales = "free_y") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 11),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP protein signal intensity comparison",
y = "Lac::YFP protein density in the glial area (A.U.)")
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 2) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 11),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP protein signal intensity comparison",
y = "Lac::YFP protein density in the glial area (A.U.)")
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
#        width = 10 * 0.5, height = 10 * 0.5,
#        device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 2) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 11),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP neuron area comparison pre- and post-stimulation",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
#        width = 10 * 0.5, height = 10 * 0.5,
#        device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 2) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 11),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
#        width = 10 * 0.5, height = 10 * 0.5,
#        device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 2) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 11),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 10))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
# ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
#        width = 10 * 0.5, height = 10 * 0.5,
#        device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 10))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
clean$condition <- factor(clean$condition, levels = c("Unstimulated", "Stimulated"))
ggplot(clean, aes(x = condition, y = sum_Area)) +
geom_jitter(width = 0.1, alpha = 0.3, size = 4) +
stat_summary(fun = mean, geom = "crossbar", width = 0.45, size = 0.7, color = "#C53270") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "#C53270", size = 1) +
stat_compare_means(comparisons = list(c("Unstimulated", "Stimulated")), method = "wilcox.test", label = "p.signif") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 14),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10))+
labs(x = NULL,
title = "Lac::YFP axon projection area comparison",
y = expression(paste("Area (",mu, m^2,")",sep="")))
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Scripts/Output/Plots/Lac_YFP_KStim_lac_area.pdf",
width = 10 * 0.5, height = 10 * 0.5,
device = cairo_pdf)
