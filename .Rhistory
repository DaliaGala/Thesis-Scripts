#   filter(genotype != "46F KK")
# bio_summary <- perform_analysis(bio_confident_anno) %>%
#   distinct() %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   mutate(mean_speed_real_units = mean_speed * 85/1950)
bio_summary %>%
group_by(genotype) %>%
summarise(n = n()) %>%
arrange(desc(n))
variables <- c("mean_speed_real_units", "index_straightness", "DC", "SDDC")
results <- map(variables, function(var) {
# Check normality
norm_result <- bio_summary %>%
group_by(genotype) %>%
shapiro_test(!!sym(var)) %>%
add_significance()
# Print
print(norm_result)
# Kruskal-Wallis test
kw_result <- bio_summary %>%
kruskal_test(reformulate('genotype', response = var))
# Print
print(kw_result)
# Dunn test
dunn_results <- bio_summary %>%
dunn_test(reformulate('genotype', response = var)) %>%
add_significance() %>%
as_tibble()
})
# Combine results
final_results <- bind_rows(results)
write.csv(final_results, "./Output/Crawling_assay_automated/statistical_results_14092023_Nrv2_crawling.csv", row.names = FALSE)
# OK6
# stat_comparisons <- list(
#   c("OK6-GAL4 Control", "OK6-GAL4 > Lac RNAi")
# )
# Nrv2
stat_comparisons <- list(
c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
c("Repo-GAL4 Control", "Nrv2-GAL4 Control"),
c("Nrv2-GAL4 Control", "Nrv2-GAL4 > Lac RNAi")
)
# Mdr65
# stat_comparisons <- list(
#   c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
#   c("Repo-GAL4 Control", "Mdr65-GAL4 Control"),
#   c("Mdr65-GAL4 Control", "Mdr65-GAL4 > Lac RNAi")
# )
# # 46F
# stat_comparisons <- list(
#   c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
#   c("Repo-GAL4 Control", "46F-GAL4 Control"),
#   c("46F-GAL4 Control", "46F-GAL4 > Lac RNAi")
# )
View(final_results)
things_to_plot <- c("mean_speed_real_units", "index_straightness", "DC", "SDDC") %>% set_names()
colors <- viridisLite::inferno(6)
# Exclude the undesired color
colors <- colors[colors != "#FCFFA4FF"]
colors <- colors[colors != "#000004FF"]
# Define the desired order Nrv2
# ordered_levels <- c("OK6-GAL4 Control", "OK6-GAL4 > Lac RNAi")
# Define the desired order Nrv2
ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Nrv2-GAL4 Control", "Nrv2-GAL4 > Lac RNAi")
# Define the desired order Mdr65
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Mdr65-GAL4 Control", "Mdr65-GAL4 > Lac RNAi")
# Define the desired order 46F
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "46F-GAL4 Control", "46F-GAL4 > Lac RNAi")
bio_summary <- bio_summary %>%
mutate(genotype = factor(genotype, levels = ordered_levels))
pdf("./Output/Plots/CH5_14092023_Nrv2_analysis_crawling_parameters.pdf", width = 7, height = 5)
map(things_to_plot, ~ bio_summary %>%
ggplot(aes_string(x = "genotype", y = .x, fill = "genotype")) +
geom_violin(color = 'NA', alpha = 0.2, trim = TRUE, scale = "width") +
geom_quasirandom(width = 0.25, alpha = 0.9, size = 2, stroke = 0) +
scale_fill_manual(values = colors) +
labs(title = .x,
x = "",
y = "Measure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
stat_compare_means(comparisons = stat_comparisons, method = "wilcox.test", label = "p.signif") +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5))
dev.off()
library(tidyverse)
library(rstatix)
library(patchwork)
library(furrr)
library(colorspace)
library(ggplot2)
library(ggbeeswarm)
library(ggpubr)
library(ggforce)
library(viridis)
`%!in%` = Negate(`%in%`)
options(scipen=999)
# perineurial.df <- read_csv("./Data/CH5_Glial_Areas_Subtype_Analysis/Results_Area_46F_GAL4.csv")
# subperineurial.df <- read_csv("./Data/CH5_Glial_Areas_Subtype_Analysis/Results_Area_Mdr65_GAL4.csv")
wrapping.df <- read_csv("./Data/CH5_Glial_Areas_Subtype_Analysis/Results_Area_Nrv2_GAL4.csv")
# Read FIJI output and add missing file
file_list = list.files(path ="/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Nrv2/Nrv2_Output_New/", pattern = "*.tif", all.files = FALSE,
full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
for (f in file_list) {
f = str_replace(f, "^ROI_", "")
if (f %!in% subperineurial.df$Label)
subperineurial.df = add_row(perineurial.df, Label = f, Area = 0)
}
# Read FIJI output and add missing file
file_list = list.files(path ="/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Nrv2/Nrv2_Output_New/", pattern = "*.tif", all.files = FALSE,
full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
for (f in file_list) {
f = str_replace(f, "^ROI_", "")
if (f %!in% wrapping.df$Label)
wrapping.df = add_row(perineurial.df, Label = f, Area = 0)
}
# Read FIJI output and add missing file
file_list = list.files(path ="/Volumes/Dalia_Data/Area Analysis Glial Subtypes/Nrv2/Nrv2_Output_New/", pattern = "*.tif", all.files = FALSE,
full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
for (f in file_list) {
f = str_replace(f, "^ROI_", "")
if (f %!in% wrapping.df$Label)
wrapping.df = add_row(wrapping.df, Label = f, Area = 0)
}
# write_csv(perineurial.df, "./Data/CH5_Glial_Areas_Subtype_Analysis/Results_Area_46F_GAL4_empty_added.csv")
## Wrapping data - Nrv2-GAL4
df <- wrapping.df %>%
group_by(Label) %>%
summarise(sum_Area = sum(Area)) %>%
ungroup() %>%
mutate(condition = case_when(
str_detect(Label, "Repo_GFP_CTRL") ~ "Repo Control",
str_detect(Label, "Nrv2_GFP_CTRL") ~ "Nrv2 Control",
str_detect(Label, "Nrv2_GFP_GD") ~ "Nrv2>Lac RNAi",
str_detect(Label, "Repo_GFP_GD") ~ "Repo>Lac RNAi")) %>%
mutate(channel = case_when(
str_detect(Label, "C1") ~ "Glial projection area",
TRUE ~ "Motor neuron axon projection area")) %>%
na.omit()
df$sum_Area[df$sum_Area > 1000] <- 0
## Subperineurial data - Mdr65-GAL4
# df <- subperineurial.df %>%
#   group_by(Label) %>%
#   summarise(sum_Area = sum(Area)) %>%
#   ungroup() %>%
#   mutate(condition = case_when(
#     str_detect(Label, "Repo_GFP_control") ~ "Repo Control",
#     str_detect(Label, "Mdr_GFP_Control") ~ "Mdr65 Control",
#     str_detect(Label, "Mdr_GFP_lac_GD") ~ "Mdr65>Lac RNAi",
#     str_detect(Label, "Repo_GFP_lac") ~ "Repo>Lac RNAi")) %>%
#   mutate(channel = case_when(
#     str_detect(Label, "C1") ~ "Glial projection area",
#     TRUE ~ "Motor neuron axon projection area")) %>%
#   na.omit()
# Perineurial data - 46F-GAL4
# df <- perineurial.df %>%
#   group_by(Label) %>%
#   summarise(sum_Area = sum(Area)) %>%
#   ungroup() %>%
#   mutate(condition = case_when(
#     str_detect(Label, "Repo_Gal4_cd8_GFP_control") ~ "Repo Control",
#     str_detect(Label, "46F_Gal4_cd8_GFP_control") ~ "46F Control",
#     str_detect(Label, "46F_Gal4_cd8_GFP_GD") ~ "46F>Lac RNAi",
#     str_detect(Label, "Repo_Gal4_cd8_GFP_GD") ~ "Repo>Lac RNAi")) %>%
#   mutate(channel = case_when(
#     str_detect(Label, "C1") ~ "Glial projection area",
#     TRUE ~ "Motor neuron axon projection area")) %>%
#   na.omit()
variables <- c("sum_Area")
results <- map(variables, function(var) {
# Check normality
norm_result <- df %>%
group_by(condition) %>%
shapiro_test(!!sym(var)) %>%
add_significance()
# Print
print(norm_result)
# Kruskal-Wallis test
kw_result <- df %>%
kruskal_test(reformulate('condition', response = var))
# Print
print(kw_result)
# Dunn test
dunn_results <- df %>%
dunn_test(reformulate('condition', response = var)) %>%
add_significance() %>%
as_tibble()
})
# Combine results
final_results <- bind_rows(results)
write.csv(final_results, "./Output/Crawling_assay_automated/statistical_results_14092023_Nrv2_area.csv", row.names = FALSE)
df$condition <- factor(df$condition, levels = c("Repo Control", "Repo>Lac RNAi", "Nrv2 Control", "Nrv2>Lac RNAi"))
ggplot(df, aes(x=condition, y=sum_Area, fill = condition)) +
geom_violin(color = NA, trim = TRUE, scale = "width") +
geom_quasirandom(width = 0.25, size = 1) +
facet_wrap(~ channel, scales = "free") +
stat_compare_means(comparisons = list(c("Repo Control", "Nrv2 Control"), c("Repo Control", "Repo>Lac RNAi"), c("Nrv2 Control", "Nrv2>Lac RNAi")), method = "wilcox.test", label = 'p.signif') +
ggtitle("Comparison of glial and neuronal areas for Lac knockdown in wrapping glia") +
xlab(NULL) + ylab(expression(paste("Area (",mu, m^2,")",sep=""))) +
theme_bw() +
# theme(panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 12),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 10),)+
theme(legend.position = "none") +
scale_fill_viridis(discrete = TRUE, option = "plasma", alpha = 0.2) +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5)
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Thesis-Scripts/Output/Plots/CH5_Nrv2_GAL4_Lac_areas.pdf",
width = 12 * 0.62, height = 7 * 0.62,
device = cairo_pdf)
ratios <- df %>%
mutate(image_id = str_remove(Label, "_C[:digit:].tif")) %>%
dplyr::select(-Label) %>%
pivot_wider(values_from = sum_Area, names_from = channel) %>%
mutate(ratio = `Glial projection area` / `Motor neuron axon projection area`)
variables <- c("ratio")
results <- map(variables, function(var) {
# Check normality
norm_result <- ratios %>%
group_by(condition) %>%
shapiro_test(!!sym(var)) %>%
add_significance()
# Print
print(norm_result)
# Kruskal-Wallis test
kw_result <- ratios %>%
kruskal_test(reformulate('condition', response = var))
# Print
print(kw_result)
# Dunn test
dunn_results <- ratios %>%
dunn_test(reformulate('condition', response = var)) %>%
add_significance() %>%
as_tibble()
})
# Combine results
final_results_ratios <- bind_rows(results)
write.csv(final_results_ratios, "./Output/Crawling_assay_automated/statistical_results_14092023_Nrv2_ratios.csv", row.names = FALSE)
ratios$condition <- factor(ratios$condition, levels = c("Repo Control", "Repo>Lac RNAi", "Nrv2 Control", "Nrv2>Lac RNAi"))
ggplot(ratios, aes(x=condition, y=ratio, fill = condition)) +
geom_violin(color = NA, trim = TRUE) +
geom_quasirandom(width = 0.25, size = 1) +
stat_compare_means(comparisons = list(c("Repo Control", "Nrv2 Control"), c("Repo Control", "Repo>Lac RNAi"), c("Nrv2 Control", "Nrv2>Lac RNAi")), method = "t.test", label = 'p.signif') +
ggtitle("Comparison of glial to neuronal area ratios for Lac knockdown in wrapping glia") +
xlab(NULL) + ylab("Ratio (Glial/motor neuron projection area)") +
theme_bw() +
# theme(panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),)+
theme(legend.position = "none") +
scale_fill_viridis(discrete = TRUE, option = "plasma", alpha = 0.2) +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5)
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Thesis-Scripts/Output/Plots/CH5_Nrv2_GAL4_Lac_ratios.pdf",
width = 10 * 0.5, height = 7 * 0.5,
device = cairo_pdf)
ratios$condition <- factor(ratios$condition, levels = c("Repo Control", "Repo>Lac RNAi", "Nrv2 Control", "Nrv2>Lac RNAi"))
ggplot(ratios, aes(x=condition, y=ratio, fill = condition)) +
geom_violin(color = NA, trim = TRUE, scale = "width") +
geom_quasirandom(width = 0.25, size = 1) +
stat_compare_means(comparisons = list(c("Repo Control", "Nrv2 Control"), c("Repo Control", "Repo>Lac RNAi"), c("Nrv2 Control", "Nrv2>Lac RNAi")), method = "t.test", label = 'p.signif') +
ggtitle("Comparison of glial to neuronal area ratios for Lac knockdown in wrapping glia") +
xlab(NULL) + ylab("Ratio (Glial/motor neuron projection area)") +
theme_bw() +
# theme(panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),)+
theme(legend.position = "none") +
scale_fill_viridis(discrete = TRUE, option = "plasma", alpha = 0.2) +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5)
ggsave("/Users/daliagala/Library/CloudStorage/OneDrive-Nexus365/Thesis/Thesis-Scripts/Output/Plots/CH5_Nrv2_GAL4_Lac_ratios.pdf",
width = 10 * 0.5, height = 7 * 0.5,
device = cairo_pdf)
library(tidyverse)
library(trajr)
library(qs)
library(skimr)
library(rstatix)
library(ggbeeswarm)
library(hrbrthemes)
library(patchwork)
library(ggpubr)
library(ggplot2)
library(ggforce)
library(viridis)
bio_confident_after_removed <- qread("./Data/CH5_Crawling_assay_automated/OK6_bio_confident_filtered.qs")
perform_analysis <- function(x){
tracks_confident <- x
mean_speed <- tracks_confident %>%
filter(!is_merged == TRUE) %>%
group_by(genotype, larva_id) %>%
slice_max(dist_tot) %>%
slice_max(time) %>%
ungroup() %>%
mutate(mean_speed = dist_tot/time) %>%
dplyr::select(genotype, larva_id, mean_speed)
index_straightness <- tracks_confident %>%
group_by(genotype, larva_id) %>%
filter(!is_merged == TRUE) %>%
slice_max(dist_tot) %>%
ungroup() %>%
mutate(index_straightness = dist_origin/dist_tot) %>%
dplyr::select(genotype, larva_id, index_straightness)
get_trajDC <- function(x, y, time){
tibble(x = x,
y = y,
time = time) %>%
TrajFromCoords() %>%
TrajSmoothSG(p = 1, n = 3) %>%
TrajDirectionalChange() %>%
mean()
}
get_trajSDDC <- function(x, y, time){
tibble(x = x,
y = y,
time = time) %>%
TrajFromCoords() %>%
TrajSmoothSG(p = 1, n = 3) %>%
TrajDirectionalChange() %>%
sd()
}
DC <- tracks_confident %>%
group_by(genotype, larva_id) %>%
summarise(DC = get_trajDC(x, y, time),
SDDC = get_trajSDDC(x, y, time))
output <- full_join(mean_speed, index_straightness, by = c("genotype", "larva_id")) %>%
full_join(DC, by = c("genotype", "larva_id")) %>%
return()
}
# OK6
bio_confident_anno <- bio_confident_after_removed %>%
mutate(larva_id = paste0(str_remove(filename, ".csv"), "_larva_", track_label)) %>%
mutate(genotype = case_when(
str_detect(larva_id, "OK6") & str_detect(larva_id, "CTRL") ~ "OK6-GAL4 Control",
str_detect(larva_id, "OK6") & str_detect(larva_id, "GD") ~ "OK6-GAL4 > Lac RNAi",
str_detect(larva_id, "OK6") & str_detect(larva_id, "KK") ~ "OK6 KK",
str_detect(larva_id, "Repo") & str_detect(larva_id, "Control") ~ "Repo-GAL4 Control",
str_detect(larva_id, "Repo") & str_detect(larva_id, "GD") ~ "Repo-GAL4 > Lac RNAi"
)) %>%
mutate(replicate = str_extract(larva_id, "\\d")) %>%
filter(genotype != "OK6 KK")
bio_summary <- perform_analysis(bio_confident_anno) %>%
distinct() %>%
mutate(replicate = str_extract(larva_id, "\\d")) %>%
mutate(mean_speed_real_units = mean_speed * 85/650)
# Nrv2
# bio_confident_anno <- bio_confident_after_removed %>%
#   mutate(larva_id = paste0(str_remove(filename, ".csv"), "_larva_", track_label)) %>%
#   mutate(genotype = case_when(
#     str_detect(larva_id, "Nrv2") & str_detect(larva_id, "Control") ~ "Nrv2-GAL4 Control",
#     str_detect(larva_id, "Nrv2") & str_detect(larva_id, "GD") ~ "Nrv2-GAL4 > Lac RNAi",
#     str_detect(larva_id, "Nrv2") & str_detect(larva_id, "KK") ~ "Nrv2 KK",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "Control") ~ "Repo-GAL4 Control",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "GD") ~ "Repo-GAL4 > Lac RNAi"
#   )) %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   filter(genotype != "Nrv2 KK")
#
# bio_summary <- perform_analysis(bio_confident_anno) %>%
#   distinct() %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   mutate(mean_speed_real_units = mean_speed * 85/1000)
# Mdr65
# bio_confident_anno <- bio_confident_after_removed %>%
#   mutate(larva_id = paste0(str_remove(filename, ".csv"), "_larva_", track_label)) %>%
#   mutate(genotype = case_when(
#     str_detect(larva_id, "Mdr") & str_detect(larva_id, "control") ~ "Mdr65-GAL4 Control",
#     str_detect(larva_id, "Mdr") & str_detect(larva_id, "GD") ~ "Mdr65-GAL4 > Lac RNAi",
#     str_detect(larva_id, "Mdr") & str_detect(larva_id, "KK") ~ "Mdr65 KK",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "control") ~ "Repo-GAL4 Control",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "GD") ~ "Repo-GAL4 > Lac RNAi"
#   )) %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   filter(genotype != "Mdr65 KK")
#
# bio_summary <- perform_analysis(bio_confident_anno) %>%
#   distinct() %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   mutate(mean_speed_real_units = mean_speed * 85/650)
# 46F
# bio_confident_anno <- bio_confident_after_removed %>%
#   mutate(larva_id = paste0(str_remove(filename, ".csv"), "_larva_", track_label)) %>%
#   mutate(genotype = case_when(
#     str_detect(larva_id, "46F") & str_detect(larva_id, "control") ~ "46F-GAL4 Control",
#     str_detect(larva_id, "46F") & str_detect(larva_id, "GD") ~ "46F-GAL4 > Lac RNAi",
#     str_detect(larva_id, "46F") & str_detect(larva_id, "KK") ~ "46F KK",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "control") ~ "Repo-GAL4 Control",
#     str_detect(larva_id, "Repo") & str_detect(larva_id, "GD") ~ "Repo-GAL4 > Lac RNAi"
#   )) %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   filter(genotype != "46F KK")
# bio_summary <- perform_analysis(bio_confident_anno) %>%
#   distinct() %>%
#   mutate(replicate = str_extract(larva_id, "\\d")) %>%
#   mutate(mean_speed_real_units = mean_speed * 85/1950)
bio_summary %>%
group_by(genotype) %>%
summarise(n = n()) %>%
arrange(desc(n))
variables <- c("mean_speed_real_units", "index_straightness", "DC", "SDDC")
results <- map(variables, function(var) {
# Check normality
norm_result <- bio_summary %>%
group_by(genotype) %>%
shapiro_test(!!sym(var)) %>%
add_significance()
# Print
print(norm_result)
# Kruskal-Wallis test
kw_result <- bio_summary %>%
kruskal_test(reformulate('genotype', response = var))
# Print
print(kw_result)
# Dunn test
dunn_results <- bio_summary %>%
dunn_test(reformulate('genotype', response = var)) %>%
add_significance() %>%
as_tibble()
})
# Combine results
final_results <- bind_rows(results)
write.csv(final_results, "./Output/Crawling_assay_automated/statistical_results_14092023_OK6_crawling.csv", row.names = FALSE)
# OK6
stat_comparisons <- list(
c("OK6-GAL4 Control", "OK6-GAL4 > Lac RNAi")
)
# Nrv2
# stat_comparisons <- list(
#   c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
#   c("Repo-GAL4 Control", "Nrv2-GAL4 Control"),
#   c("Nrv2-GAL4 Control", "Nrv2-GAL4 > Lac RNAi")
# )
# Mdr65
# stat_comparisons <- list(
#   c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
#   c("Repo-GAL4 Control", "Mdr65-GAL4 Control"),
#   c("Mdr65-GAL4 Control", "Mdr65-GAL4 > Lac RNAi")
# )
# # 46F
# stat_comparisons <- list(
#   c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi"),
#   c("Repo-GAL4 Control", "46F-GAL4 Control"),
#   c("46F-GAL4 Control", "46F-GAL4 > Lac RNAi")
# )
View(final_results)
things_to_plot <- c("mean_speed_real_units", "index_straightness", "DC", "SDDC") %>% set_names()
colors <- viridisLite::inferno(6)
# Exclude the undesired color
colors <- colors[colors != "#FCFFA4FF"]
colors <- colors[colors != "#000004FF"]
# Define the desired order Nrv2
ordered_levels <- c("OK6-GAL4 Control", "OK6-GAL4 > Lac RNAi")
# Define the desired order Nrv2
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Nrv2-GAL4 Control", "Nrv2-GAL4 > Lac RNAi")
# Define the desired order Mdr65
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Mdr65-GAL4 Control", "Mdr65-GAL4 > Lac RNAi")
# Define the desired order 46F
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "46F-GAL4 Control", "46F-GAL4 > Lac RNAi")
bio_summary <- bio_summary %>%
mutate(genotype = factor(genotype, levels = ordered_levels))
pdf("./Output/Plots/CH5_14092023_OK6_analysis_crawling_parameters.pdf", width = 7, height = 5)
map(things_to_plot, ~ bio_summary %>%
ggplot(aes_string(x = "genotype", y = .x, fill = "genotype")) +
geom_violin(color = 'NA', alpha = 0.2, trim = TRUE, scale = "width") +
geom_quasirandom(width = 0.25, alpha = 0.9, size = 2, stroke = 0) +
scale_fill_manual(values = colors) +
labs(title = .x,
x = "",
y = "Measure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
stat_compare_means(comparisons = stat_comparisons, method = "wilcox.test", label = "p.signif") +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5))
dev.off()
things_to_plot <- c("mean_speed_real_units", "index_straightness", "DC", "SDDC") %>% set_names()
colors <- viridisLite::inferno(6)
# Exclude the undesired color
colors <- colors[colors != "#FCFFA4FF"]
colors <- colors[colors != "#000004FF"]
# Define the desired order Nrv2
ordered_levels <- c("OK6-GAL4 Control", "OK6-GAL4 > Lac RNAi")
# Define the desired order Nrv2
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Nrv2-GAL4 Control", "Nrv2-GAL4 > Lac RNAi")
# Define the desired order Mdr65
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "Mdr65-GAL4 Control", "Mdr65-GAL4 > Lac RNAi")
# Define the desired order 46F
# ordered_levels <- c("Repo-GAL4 Control", "Repo-GAL4 > Lac RNAi", "46F-GAL4 Control", "46F-GAL4 > Lac RNAi")
bio_summary <- bio_summary %>%
mutate(genotype = factor(genotype, levels = ordered_levels))
pdf("./Output/Plots/CH5_14092023_OK6_analysis_crawling_parameters.pdf", width = 7, height = 5)
map(things_to_plot, ~ bio_summary %>%
ggplot(aes_string(x = "genotype", y = .x, fill = "genotype")) +
geom_violin(color = 'NA', alpha = 0.2, trim = TRUE) +
geom_quasirandom(width = 0.25, alpha = 0.9, size = 2, stroke = 0) +
scale_fill_manual(values = colors) +
labs(title = .x,
x = "",
y = "Measure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
stat_compare_means(comparisons = stat_comparisons, method = "wilcox.test", label = "p.signif") +
geom_pointrange(stat = "summary", colour = "#C53270", size = 0.5))
dev.off()
